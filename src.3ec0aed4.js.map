{"version":3,"sources":["index.js"],"names":["daysValue","document","querySelector","hoursValue","minsValue","secsValue","CountdownTimer","targetDate","init","getDeltaTime","setInterval","currentTime","Date","now","deltaTime","getTimeComponents","time","days","Math","floor","hours","pad","mins","secs","updateClockface","value","String","padStart","console","log","textContent","timer","selector"],"mappings":";AAyDA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAzDA,IAAMA,EAAYC,SAASC,cAAc,2BACnCC,EAAaF,SAASC,cAAc,4BACpCE,EAAYH,SAASC,cAAc,2BACnCG,EAAYJ,SAASC,cAAc,2BAEnCI,EAAAA,WACwB,SAAA,EAAA,GAAdC,IAAAA,EAAAA,EAAAA,WAAc,EAAA,KAAA,GACrBA,KAAAA,WAAaA,EACbC,KAAAA,OAiDT,OAAA,EAAA,EAAA,CAAA,CAAA,IAAA,OA9CS,MAAA,WAAA,IAAA,EAAA,KACAC,KAAAA,eACLC,YAAY,WACV,EAAKD,gBACJ,OA0CP,CAAA,IAAA,eAvCiB,MAAA,WACPE,IAAAA,EAAcC,KAAKC,MACnBC,EAAY,KAAKP,WAAaI,EAC/BI,KAAAA,kBAAkBD,KAoC3B,CAAA,IAAA,oBAjCoBE,MAAAA,SAAAA,GACVC,IAAAA,EAAOC,KAAKC,MAAMH,EAAQ,OAC1BI,EAAQ,KAAKC,IACjBH,KAAKC,MAAOH,EAAQ,MAAyB,OAEzCM,EAAO,KAAKD,IAAIH,KAAKC,MAAOH,EAAQ,KAAoB,MACxDO,EAAO,KAAKF,IAAIH,KAAKC,MAAOH,EAAQ,IAAc,MAEnDQ,KAAAA,gBAAgBP,EAAMG,EAAOE,EAAMC,KAyB5C,CAAA,IAAA,MAtBME,MAAAA,SAAAA,GACKC,OAAAA,OAAOD,GAAOE,SAAS,EAAG,OAqBrC,CAAA,IAAA,kBAlBkBV,MAAAA,SAAAA,EAAMG,EAAOE,EAAMC,GAC3BP,IAAAA,EAAUC,GAAAA,OAAAA,GAAOG,OAAAA,GAAQE,OAAAA,GAAOC,OAAAA,GACtCK,QAAQC,IAAIb,GAQZhB,EAAU8B,YAAiBb,GAAAA,OAAAA,GAC3Bd,EAAW2B,YAAiBV,GAAAA,OAAAA,GAC5BhB,EAAU0B,YAAiBR,GAAAA,OAAAA,GAC3BjB,EAAUyB,YAAiBP,GAAAA,OAAAA,OAK/B,EApDMjB,GAoDAyB,EAAQ,IAAIzB,EAAe,CAC/B0B,SAAU,WACVzB,WAAY,IAAIK,KAAK,KAAM,EAAG","file":"src.3ec0aed4.js","sourceRoot":"../src","sourcesContent":["const daysValue = document.querySelector('span[data-value=\"days\"]');\nconst hoursValue = document.querySelector('span[data-value=\"hours\"]');\nconst minsValue = document.querySelector('span[data-value=\"mins\"]');\nconst secsValue = document.querySelector('span[data-value=\"secs\"]');\n\nclass CountdownTimer {\n  constructor({ targetDate }) {\n    this.targetDate = targetDate;\n    this.init();\n  }\n\n  init() {\n    this.getDeltaTime();\n    setInterval(() => {\n      this.getDeltaTime();\n    }, 1000);\n  }\n\n  getDeltaTime() {\n    const currentTime = Date.now();\n    const deltaTime = this.targetDate - currentTime;\n    this.getTimeComponents(deltaTime);\n  }\n\n  getTimeComponents(time) {\n    const days = Math.floor(time / (1000 * 60 * 60 * 24));\n    const hours = this.pad(\n      Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)),\n    );\n    const mins = this.pad(Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)));\n    const secs = this.pad(Math.floor((time % (1000 * 60)) / 1000));\n\n    this.updateClockface(days, hours, mins, secs);\n  }\n\n  pad(value) {\n    return String(value).padStart(2, '0');\n  }\n\n  updateClockface(days, hours, mins, secs) {\n    const time = `${days}${hours}${mins}${secs}`;\n    console.log(time);\n    // if (time <= \"0000000\") {\n    //     daysValue.textContent = \"0\";\n    //     hoursValue.textContent = \"0\";\n    //     minsValue.textContent = \"0\";\n    //     secsValue.textContent = \"0\";\n    //     console.log(\"Заебись!\")\n    // } else {\n    daysValue.textContent = `${days}`;\n    hoursValue.textContent = `${hours}`;\n    minsValue.textContent = `${mins}`;\n    secsValue.textContent = `${secs}`;\n    // }\n  }\n}\n\nconst timer = new CountdownTimer({\n  selector: '#timer-1',\n  targetDate: new Date(2022, 0, 0),\n});\n"]}